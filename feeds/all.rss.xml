<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>tutysara's space</title><link href="http://www.tutysara.net/" rel="alternate"></link><link href="http://www.tutysara.net/feeds/all.rss.xml" rel="self"></link><id>http://www.tutysara.net/</id><updated>2013-10-21T15:25:00+05:30</updated><entry><title>Running a Hacker news clone</title><link href="http://www.tutysara.net/posts/2013/10/21/running-a-hackernews-clone/" rel="alternate"></link><updated>2013-10-21T15:25:00+05:30</updated><author><name>tutysara</name></author><id>tag:www.tutysara.net,2013-10-21:posts/2013/10/21/running-a-hackernews-clone/</id><summary type="html">&lt;p&gt;I very much like the presentation of &lt;a href="https://news.ycombinator.com/item?id=6576560"&gt;hackernews&lt;/a&gt; when it comes to understanding and making sense of the discussions quickly. It is a lot easier than reading pages of forums to get the main ideas of the discussions since the top comments and active discussions bubble to the top.&lt;/p&gt;
&lt;p&gt;I wanted to run a site for discussing and sharing information that are useful for people working in techparks and the format that immediately clicked in my mind was the hacknews style. I began writing my own &lt;a href="https://github.com/techparknews/hsnews"&gt;clone&lt;/a&gt; based on the work of people from &lt;a href="http://hackerschool.com/"&gt;hackerschool&lt;/a&gt; but it lacked the polish and look to make the people trust and even sign up, I had send invites to few of my friends to try but the turnaround rate was quite low.&lt;/p&gt;
&lt;p&gt;Now I wanted to validate whether there is any market for this idea (ie) do many techies have the need/difficulty to get info about the things and happenings around thier work place. I decided to deploy a polished better looking open source product and see how it gets picked up and used. I zeroed in on &lt;a href="https://github.com/SachaG/Telescope"&gt;Telescope&lt;/a&gt; after having evaluated &lt;a href="https://github.com/SachaG/Telescope"&gt;Telescope&lt;/a&gt; and &lt;a href="https://github.com/jcs/lobsters"&gt;lobsters&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Reason for choosing Telescope are&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Looks better and intutive and will be easy for people who have not used hacknews before&lt;/li&gt;
&lt;li&gt;Supports sharing on social networks out of the box&lt;/li&gt;
&lt;li&gt;Easy to setup&lt;/li&gt;
&lt;li&gt;I like the idea of single page apps&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here are the steps that I did to install telescope on my VPS running Ubuntu 12.04&lt;/p&gt;
&lt;h4&gt;Do all these from a previliged user&lt;/h4&gt;
&lt;h3&gt;Install nodejs&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install python-software-properties
sudo add-apt-repository ppa:chris-lea/node.js
sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;npm is now part of nodejs and installing nodejs installs it&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install nodejs
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Check the node version, as of this writing Chris Lea repo has version 0.10.21&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;node --version
v0.10.21
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install meteorite - Installer &amp;amp; smart package manager for Meteor&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo npm install -g meteorite
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;Login to the web user with limited previlage and clone the repository&lt;/h4&gt;
&lt;p&gt;I was testing the application from this user before starting it using upstart&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;git clone https://github.com/SachaG/Telescope.git
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Configure Telescope to start automatically when system reboots, I have to do this because my VPS provider had restarted the server more than 3-4 times in a month&lt;/p&gt;
&lt;p&gt;Create a file &lt;code&gt;telescope.conf&lt;/code&gt; in &lt;code&gt;/etc/init&lt;/code&gt; with the following contents&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;# meteorjs - meteorjs job file&lt;/span&gt;

description &lt;span class="s2"&gt;&amp;quot;Start Telescope&amp;quot;&lt;/span&gt;
author &lt;span class="s2"&gt;&amp;quot;tutysara&amp;quot;&lt;/span&gt;

&lt;span class="c"&gt;# When to start the service&lt;/span&gt;
start on runlevel &lt;span class="o"&gt;[&lt;/span&gt;2345&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# When to stop the service&lt;/span&gt;
stop on runlevel &lt;span class="o"&gt;[&lt;/span&gt;016&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c"&gt;# Automatically restart process if crashed&lt;/span&gt;
respawn

&lt;span class="c"&gt;# Essentially lets upstart know the process will detach itself to the background&lt;/span&gt;
expect fork

&lt;span class="c"&gt;# Start the process&lt;/span&gt;
script
    &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/local/bin:/opt/local/sbin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
    &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PWD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/web/telescopes/Telescope
    &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;NODE_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/nodejs:/usr/lib/node_modules
    &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/web
    &lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;MONGO_URL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;mongodb://localhost:27017/meteor
    &lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;---- start ----&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;cd&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/home/web/telescopes/Telescope&amp;quot;&lt;/span&gt;
    &lt;span class="nb"&gt;exec &lt;/span&gt;meteor run -p 3000 --production
end script
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Finally test the scipt by starting, stopping and checking status&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo start telescope
sudo status telescope
sudo stop telescope
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If there are errors it can be seen in upstart logs at &lt;code&gt;/var/log/upstart/telescope.log&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The application can be accessed &lt;a href="http://www.techparknews.in"&gt;here&lt;/a&gt;. I use a rproxy to send port 80 to 3000&lt;/p&gt;
&lt;p&gt;I registered for google analytics account and included it from the settings page after the application is deployed to check how this all goes.&lt;/p&gt;</summary><category term="self-notes"></category><category term="web"></category></entry><entry><title>Setting up a new VPS server</title><link href="http://www.tutysara.net/posts/2013/10/18/configuring-vps-server/" rel="alternate"></link><updated>2013-10-18T11:16:00+05:30</updated><author><name>tutysara</name></author><id>tag:www.tutysara.net,2013-10-18:posts/2013/10/18/configuring-vps-server/</id><summary type="html">&lt;p&gt;These are the things I did to setup new VPS instances on Digital Ocean and ChicagoVPS&lt;/p&gt;
&lt;h3&gt;Update the machine&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get update
sudo apt-get upgrade
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Set locales&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo locale-gen
sudo dpkg-reconfigure locales
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;add user&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo adduser tutysra
&lt;span class="c"&gt;# give sudo previliges&lt;/span&gt;
sudo visudo
tutysra &lt;span class="nv"&gt;ALL&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;ALL&lt;span class="o"&gt;)&lt;/span&gt; ALL
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install Git&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install git
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install sun java&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo add-apt-repository ppa:webupd8team/java
sudo apt-get update
sudo apt-get install oracle-java7-installer
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install Tor for screen scrapping&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install tor
sudo /etc/init.d/tor start
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Make default directories&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir ~/swt
mkdir ~/bin
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install NX ( not necessary for CLI boxes)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;DEBIAN_FRONTEND&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;noninteractive
sudo -E apt-get update
sudo -E apt-get install -y ubuntu-desktop
sudo apt-get install gnome-session-fallback

wget &lt;span class="s1"&gt;&amp;#39;http://64.34.173.142/download/3.5.0/Linux/nxclient_3.5.0-7_amd64.deb&amp;#39;&lt;/span&gt;
wget &lt;span class="s1"&gt;&amp;#39;http://64.34.173.142/download/3.5.0/Linux/nxnode_3.5.0-9_amd64.deb&amp;#39;&lt;/span&gt;
wget &lt;span class="s1"&gt;&amp;#39;http://64.34.173.142/download/3.5.0/Linux/FE/nxserver_3.5.0-11_amd64.deb&amp;#39;&lt;/span&gt;

sudo dpkg -i *.deb
sudo /usr/NX/bin/nxserver --status

nano /usr/NX/etc/node.cfg
&lt;span class="c"&gt;# Uncomment the “DefaultXSession” line and set it to :&lt;/span&gt;
&lt;span class="nv"&gt;DefaultXSession&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/etc/X11/Xsession
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Enable/Disable password authentication in ssh&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo vi /etc/ssh/sshd_config
 PasswordAuthentication to &lt;span class="s2"&gt;&amp;quot;yes/no&amp;quot;&lt;/span&gt; 
 PermitRootLogin no
sudo service ssh restart
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install screen &amp;amp; tmux&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install screen
sudo apt-get install tmux
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install curl&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install curl
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install emacs and customize&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install software-properties-common &lt;span class="c"&gt;# installs some python scripts necessary for these operations&lt;/span&gt;
sudo add-apt-repository ppa:cassou/emacs
sudo apt-get update
sudo apt-get install emacs-snapshot-el emacs-snapshot-gtk emacs-snapshot
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;TERM&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;xterm-256color
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install lein&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir ~/bin &lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class="nb"&gt;cd&lt;/span&gt; ~/bin
wget &lt;span class="s1"&gt;&amp;#39;https://raw.github.com/technomancy/leiningen/stable/bin/lein&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install JDK6 for neo4j&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;wget --no-cookies --header &lt;span class="s2"&gt;&amp;quot;Cookie: gpw_e24=http%3A%2F%2Fwww.oracle.com&amp;quot;&lt;/span&gt; http://download.oracle.com/otn-pub/java/jdk/6u41-b02/jdk-6u41-linux-x64.bin 

&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/neo4j/swt/jdk1.6/
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/home/neo4j/swt/jdk1.6/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configure swap&lt;/h3&gt;
&lt;p&gt;My ChicagoVPS runs on OpenVZ and Swap space couldn't be enabled at VM level.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;swapon -s
sudo dd &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/dev/zero &lt;span class="nv"&gt;of&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/swapfile &lt;span class="nv"&gt;bs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;1024 &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;2048k
sudo mkswap /swapfile
sudo swapon /swapfile
swapon -s

sudo nano /etc/fstab
/swapfile       none    swap    sw      0       0 

sudo chown root:root /swapfile 
sudo chmod 0600 /swapfile

sudo nano /etc/sysctl.conf 
vm.swappiness&lt;span class="o"&gt;=&lt;/span&gt;20  &lt;span class="c"&gt;# default is 60% RAM full&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configure Timezone from command line&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo dpkg-reconfigure tzdata
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install ngnix&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install nginx
sudo service nginx start
&lt;span class="c"&gt;#ifconfig eth0 | grep inet | awk &amp;#39;{ print $2 }&amp;#39;&lt;/span&gt;
update-rc.d nginx defaults
&lt;/pre&gt;&lt;/div&gt;


&lt;h4&gt;configuring ngnix&lt;/h4&gt;
&lt;p&gt;sudo invoke-rc.d nginx reload
&lt;a href="https://help.ubuntu.com/community/Nginx/ReverseProxy"&gt;Follow instructions here&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Install latest tomcat from apache&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install tomcat7 - Not fine
Download from - http://apache.techartifact.com/mirror/tomcat/tomcat-7/v7.0.37/bin/apache-tomcat-7.0.37.tar.gz
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Edit .bashrc&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;JAVA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/lib/jvm/java-7-oracle
&lt;span class="nb"&gt;export &lt;/span&gt;&lt;span class="nv"&gt;CATALINA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/swt/tomcat
&lt;span class="nv"&gt;$CATALINA_HOME&lt;/span&gt;/bin/startup.sh
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install mongodb&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;url - http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen&amp;#39;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/10gen.list
sudo apt-get update
sudo apt-get install mongodb-10gen
data - /var/lib/mongodb
log - /var/log/mongodb
use - mongodb
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Server Monitoring&lt;/h1&gt;
&lt;h3&gt;Install htop&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install htop
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install iftop&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install iftop
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Install munin&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install munin munin-node
sudo /etc/init.d/munin-node restart
results - /var/cache/munin/www &lt;span class="c"&gt;#sync to dropbox&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Server Checking&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install nmap
port scan - sudo nmap -v -sT localhost
syn scan - sudo nmap -v -sS localhost
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;Allow automatic system updating&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo apt-get install unattended-upgrades
sudo dpkg-reconfigure unattended-upgrades
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;IPTables configuration&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;sudo iptables -L
sudo iptables -L -n &lt;span class="c"&gt;# no dns lookup for ip to hostname resolution&lt;/span&gt;

&lt;span class="c"&gt;# flush all existing rules&lt;/span&gt;
sudo iptables -F
sudo iptables -I INPUT 1 -i lo -j ACCEPT &lt;span class="c"&gt;# accept loopback&lt;/span&gt;
sudo iptables -I INPUT 2 -p tcp --dport ssh -j ACCEPT &lt;span class="c"&gt;# allow ssh&lt;/span&gt;
sudo iptables -I INPUT 3 -p udp --dport 60000:61000 -j ACCEPT &lt;span class="c"&gt;# allow mosh&lt;/span&gt;
sudo iptables -I INPUT 4 -p tcp --dport 80 -j ACCEPT &lt;span class="c"&gt;# allow www&lt;/span&gt;
sudo iptables -I INPUT 5 -p udp -m udp --dport 53 -j ACCEPT &lt;span class="c"&gt;# allow dns&lt;/span&gt;
sudo iptables -A INPUT -j DROP
sudo iptables -L -v

&lt;span class="c"&gt;#self note - see bitbucket for rules file&lt;/span&gt;
&lt;span class="c"&gt;# allow all existing connections&lt;/span&gt;
sudo iptables -A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

&lt;span class="c"&gt;# persist rules&lt;/span&gt;
sudo apt-get install iptables-persistent
sudo service iptables-persistent start
sudo /etc/init.d/iptables-persistent save
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you do something more/different, please comment, I will refine my setup and this blog post. Thanks.&lt;/p&gt;</summary><category term="self-notes"></category></entry><entry><title>Correlation between INR values of different currencies</title><link href="http://www.tutysara.net/posts/2012/10/05/correlation-in-currency-inr-values/" rel="alternate"></link><updated>2012-10-05T11:16:00+05:30</updated><author><name>tutysara</name></author><id>tag:www.tutysara.net,2012-10-05:posts/2012/10/05/correlation-in-currency-inr-values/</id><summary type="html">&lt;article comments="1"&gt;
  &lt;title&gt;Correlation between INR values of different currencies&lt;/title&gt;
  &lt;date&gt;2012-09-05 11:31&lt;/date&gt;
  &lt;tags&gt;
    &lt;tag&gt;data&lt;/tag&gt;
    &lt;tag&gt;clojure&lt;/tag&gt;
  &lt;/tags&gt;
&lt;/article&gt;

&lt;p&gt;&lt;summary&gt;
  &lt;p&gt;
  This is an interesting take away example from the class
   which &lt;a href="http://www.s-anand.net/"&gt;Anand&lt;/a&gt; is teaching at
   NIAS.
Here we are trying to correlate between the INR values of various
   currencies like AUD, CNY (Chinese Yen), EUR, GBP (Great Britain
   Pound), JPY, SGD, USD and find the positive or negative
   correlations. The focus is on data collection and transformation. 
  &lt;/p&gt;
&lt;/summary&gt;&lt;/p&gt;
&lt;section&gt;
  &lt;p&gt;
    The first part is the identification of a proper source to get the
    data. &lt;a href="http://www.oanda.com"&gt;oanda.com&lt;/a&gt; is one such source
    from which historic currency exchange rates can be obtained.
  &lt;/p&gt;
  &lt;p&gt;
    The next part is the development of an automated/easy way of obtaining
    the data from the site, suitable for transformation. With some
    help from develpment tools in the browser the url of the
    download link can be found.
    It looks something like
    &lt;br/&gt;

    &lt;script src="https://gist.github.com/3638650.js?file=data2_url.sh"&gt;&lt;/script&gt;
    &lt;br/&gt;
    Here we can find that SGD is the currency that is being used, with
    little exprimentation it can be found that we can download data
    for other currencies by altering this URL (example - replace SGD
    with JPY for downloading data for Japanese yen)
  &lt;/P&gt;
  &lt;p&gt;
    The next is the transformation part, the downloaded csv files
    contains data that are not required for further analysis that
    should be filtered to get the required data. In this case we have
    to filter the first 5 lines, that is done by using &lt;code&gt;tail -n +6&lt;/code&gt;,
    which prints starting from the 6th line and we have to also filter
    the last 4 lines and this is done by using &lt;code&gt; head -n -4&lt;/code&gt;, which
    prints all lines but the last 4 lines.
  &lt;/p&gt;
  &lt;p&gt;
    We also combine the data and make a single csv file containing data of all currencies
    for easy consumption, this can be done using
  &lt;p&gt;
    &lt;code&gt;
    paste AUD.csv CNY.csv EUR.csv GBP.csv JPY.csv SGD.csv USD.csv |sed
    's/\t/,/g'&gt;alldata.csv
    &lt;/code&gt;
  &lt;/p&gt;
  &lt;p&gt;
    The complete code for the steps so far
    &lt;br/&gt;
    &lt;code&gt;
      &lt;script src="https://gist.github.com/3638103.js?file=gistfile1.sh"&gt;&lt;/script&gt;
    &lt;/code&gt;
  &lt;/P&gt;
  &lt;p&gt;
    The next step is the visualization, The choice of tools for
    visualization is left open, I prefer clojure with incanter.
    Here is the clojure snippet
  &lt;/p&gt;
  &lt;p&gt;
    load the data  
    &lt;code&gt;
     &lt;script src="https://gist.github.com/3638130.js?file=data2_currency_read_data.clj"&gt;&lt;/script&gt;
    &lt;/code&gt;
    plot it
    &lt;code&gt;
     &lt;script src="https://gist.github.com/3638148.js?file=blog_data2_unnormalized_plot.clj"&gt;&lt;/script&gt;
    &lt;/code&gt;
  &lt;/p&gt;
  &lt;p&gt;
    Here is how it looks - 
    &lt;br/&gt;
    &lt;a href="http://www.flickr.com/photos/86708945@N08/7937082534/"
    title="data2_currency_correlation_notnormalized by tutysara, on
    Flickr"&gt;&lt;img src="http://farm9.staticflickr.com/8299/7937082534_5b636f6671.jpg"
    width="500" height="400"
    alt="data2_currency_correlation_notnormalized"&gt;&lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;
    It can be found that it is difficult to compare data on different
    scales, normalization helps us in this case (data-mean/mean)
    &lt;br/&gt;
    Here is a function to normalize data
  &lt;p&gt;
    &lt;script src="https://gist.github.com/3638406.js?file=data2_currency_normalize_data.clj"&gt;&lt;/script&gt;
  &lt;/P&gt;
  &lt;p&gt;
    and the plot is updated to show the normalized data
    &lt;code&gt;
    &lt;script src="https://gist.github.com/3638436.js?file=data2_currency_normalize_plot.clj"&gt;&lt;/script&gt;
    &lt;/code&gt;
  &lt;/P&gt;
  &lt;p&gt;
    Here is how it looks
    &lt;br/&gt;
    &lt;a href="http://www.flickr.com/photos/86708945@N08/7937082716/"
    title="data2_currency_correlation_normalized by tutysara, on
    Flickr"&gt;&lt;img src="http://farm9.staticflickr.com/8446/7937082716_e8134a87d4.jpg"
    width="500" height="353"
    alt="data2_currency_correlation_normalized"&gt;&lt;/a&gt;
  &lt;/p&gt;
  &lt;p&gt;
    the complete code
    &lt;code&gt;
&lt;script src="https://gist.github.com/3638556.js?file=blog_data2_complete_code.clj"&gt;&lt;/script&gt;
    &lt;/code&gt;
  &lt;/p&gt;
 &lt;section&gt;</summary><category term="data"></category><category term="clojure"></category></entry><entry><title>Started blogging from a new place</title><link href="http://www.tutysara.net/posts/2012/09/02/static-blogging-init/" rel="alternate"></link><updated>2012-09-02T16:14:00+05:30</updated><author><name>tutysara</name></author><id>tag:www.tutysara.net,2012-09-02:posts/2012/09/02/static-blogging-init/</id><summary type="html">&lt;p&gt;&lt;summary&gt;
  &lt;p&gt;
   I have been thinking about having a professional looking blog/space for
   some time. I noticed many people I follow on github maintaining a
   neat blog, I see that many of them
   use &lt;a href="https://github.com/mojombo/jekyll"&gt;jekyll&lt;a&gt;/
        &lt;a href="http://octopress.org"&gt;octopress&lt;/a&gt; and use
  &lt;a href="http://pages.github.com/"&gt; github pages&lt;/a&gt; for hosting. I like the concept of static blogging and
   wanted to give it a try.
  &lt;/p&gt;
&lt;/summary&gt;&lt;/p&gt;
&lt;section&gt;
  &lt;p&gt;
    I gone through the process and it looks neat and clean, create a
    github repo with your username and drop html pages into it and &lt;a href="http://www.github.com/"&gt; github&lt;/a&gt; takes care of serving them,
    damm simple. Can't wait to write my blog and here comes the first
    posts. I will be tweaking my comments setup with &lt;a href="http://disqus.com/"&gt; disqus&lt;/a&gt; and
    analytics and also my blog engine using this post.
  &lt;/p&gt;
 &lt;section&gt;</summary><category term="general"></category><category term="github"></category></entry></feed>